Data modelling of Ecommerce (part -2)

product.model.js----------------------------------------------------
import mongoose from "mongoose";
const productSchema = new mongoose.Schema(
  {
     description: {
       type: String,
       required: true
     },
     name: {
      type: String,
      required: true
     },
     productImage: {
       type:String
     },
     price:{
       type: Number,
       default: 0
     },
     stock:{
       default: 0,
       type: Number
     },
     category:{
       type: mongoose.Schema.Types.ObjectId,
       ref: "Category",
       required: true,
     },
     owner:{
       type: mongoose.Schema.Types.ObjectId,
       ref: "User",
     },

  },{timestamps: true});
 export const Product = mongoose.model("Product", productSchema);
 ---------------------------------------------------------------------------------------------------------------------------------

 
 order.model.js------------------------------------------------------------

 import mongoose from " mongoose";

// making mini model for orderItems
const orderItemSchema = new mongoose.Schema({
   productId: {
     type: mongoose.Schema.Types.ObjectId,
     ref: "product"
   },
  quantity: {
    type: Number,
    required: true
  }

})

const orderSchema = new mongoose.Schema(
  {
    orderPrice:{
      type: Number,
      required: true
    }, 
    customer: {
      type: mongoose.Schema.Types.ObjectId,
      ref: "User"
    },
    orderItems:{ // above we made a mini model of orderItems
      type: [orderItemSchema]  // making array so that multiple items can be there
    },
    address: {
    type: String,
    required: true
    },
    status: {
      type: String,
      enum: ["PENDING", "CANCELLED","DELIVERED"],
      default: "PENDING"
    },

  },{timestamps:true});
export const Order = mongoose.model("Order", orderSchema); 
----------------------------------------------------------------------------------------------------------------
